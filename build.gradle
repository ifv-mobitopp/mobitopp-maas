apply plugin: 'java'
apply plugin: 'eclipse'

group = 'edu.kit.ifv.mobitopp'
wrapper.gradleVersion = '4.10'

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
    maven { url "http://mvn.collide.info/content/repositories/releases/" }
    maven { url project.ext["local.cache.path"] }
    maven { url project.ext["mobitopp.repository.url"] }
    maven { url "https://jitpack.io" }
}

configurations.all {
    exclude group: 'xerces', module: 'xerces'
}

dependencies {
    compile "edu.kit.ifv.mobitopp:mobitopp:0.1"
    
    testCompile 'junit:junit:4.12',
        'org.hamcrest:hamcrest-all:1.3',
        'org.mockito:mockito-core:2.+'
}

task syncDependencies(type: Copy) {
    group = 'build setup'
    from project.ext["mobitopp.repository.url"]
    into project.ext["local.cache.path"] as File
}

compileJava.dependsOn syncDependencies

task runPopulationSynthesis(type: JavaExec) {
    args 'config/population-synthesis.yaml'
    main = "edu.kit.ifv.mobitopp.populationsynthesis.PopulationSynthesisConfiguration"
}

task runSimulation(type: JavaExec) {
    args 'config/simulation.yaml'
    main = "edu.kit.ifv.mobitopp.simulation.SimulationConfiguration"
}

tasks.withType(JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    dependsOn check
    enableAssertions = "true"
    group = "application"
    maxHeapSize = "25G"
    jvmArgs '-Xss512M'
    jvmArgs '-XX:+UseG1GC'
    //jvmArgs '-Xrunhprof:cpu=samples,depth=10'
}